[{"title":"Welcome to My Blog","url":"/2025/04/19/Welcome%20to%20My%20Blog/","content":"Hello and welcome to my personal blog! After much consideration, I finally decide to build my own blog as a base to record my process of sowing and growing.\nWhat to ExpectThis blog will be a collection of my ideas and learning experience during my study. Through this blog, I hope to not only document my own growth but also connect with others who have similar interests with me!\nA Little About This Space\nAcademic ideas and findings\nOccasional reflections on learning\nMy weekly summary of study\nUseful learning resources I discover along the way\n\nThank You for VisitingWhether you stumbled upon this blog by chance or came here intentionally, thank you for taking the time to read my first post. I look forward to sharing more content in the future and hopefully engaging in meaningful exchanges!Feel free to explore the blog and give comments. I’m excited about this new journey and appreciate your company along the way!\n"},{"title":"Weekly Summary-4.19","url":"/2025/04/19/Weekly%20Summary-4.19/","content":"本文主要总结回顾数字逻辑和计算机网络两门课程所学的内容及一些疑问。\n数字逻辑主要学习了同步时序逻辑下的FSM（有限状态机），并在FSM基础上构建了synchronous-counter，从而引申出了ripple-counter的相关知识\n同步时序逻辑下的时间约束\n不能太慢：$T_c &gt;&#x3D; t_{pcd} + t_{pd} + t_{setup}$  以CLK上升&#x2F;下降沿开始为基准，时钟周期大于等于：时钟到输出传播延迟+组合逻辑传播延迟+下一个上升沿之前需要保持稳定的最小时间\n不能太快：$t_{ccd} + t_{cd} &lt;&#x3D; t_{hold}$  上升沿之后的保持时间大于等于：时钟到输出污染延迟+组合逻辑污染延迟\n\nripple-counter\nA ripple counter is a cascaded arrangement of flip-flops where the output of one flip-flop drives the clock input of the following flip-flop.（ripple-counter中下一个fifo的CLK是上一个fifo的输出Q）\n\n\n整个ripple-counter的时钟周期等于所有fifo的propagation-delay之和\n最简单的ripple-counter设计只能MOD $2^n$，如果想要得到MOD其他数字的ripple-counter：可以考虑在某个JK-FiFo前加入一个组合逻辑输入clear端，使得前级输出达到某个预设值的时候最后一个FiFo的输出发生变化\n\n计算机网络主要学习了路由选择算法与自治系统\n路由选择算法\nLink-State：全局算法，基于Dijkstra\nDistance-Vector：迭代分布式算法\n\nOSPF与BGP\nOSPF：自治系统内的算法，基于Dijkstra\nBGP：自治系统间的算法，基于策略（可能存在hot-potato问题）\n\n","tags":["Computer-Network","Digital-Logic"]}]